NUMBER_PIXELS_IN_COL = 7;
NUMBER_PIXELS_IN_ROW = 5;

NUMBER_OF_CHAR_ROWS = 2;
NUMBER_OF_CHARS_IN_ROW = 16; 

CHARS = {

	// https://cdn-shop.adafruit.com/datasheets/HD44780.pdf
	// Table 4: Correspondence between Character Codes and Character Patterns (ROM Code: A00)

	// Column 1
	'!':[[0,0,1,0,0], [0,0,1,0,0], [0,0,1,0,0], [0,0,1,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,1,0,0]],
	'"':[[0,1,0,1,0], [0,1,0,1,0], [0,1,0,1,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]],
	'#':[[0,1,0,1,0], [0,1,0,1,0], [1,1,1,1,1], [0,1,0,1,0], [1,1,1,1,1], [0,1,0,1,0], [0,1,0,1,0]],
	'$':[[0,0,1,0,0], [0,1,1,1,1], [1,0,1,0,0], [0,1,1,1,0], [0,0,1,0,1], [1,1,1,1,0], [0,0,1,0,0]],
	'%':[[1,1,0,0,0], [1,1,0,0,1], [0,0,0,1,0], [0,0,1,0,0], [0,1,0,0,0], [1,0,0,1,1], [0,0,0,1,1]],
	'&':[[0,1,1,0,0], [1,0,0,1,0], [1,0,1,0,0], [0,1,0,0,0], [1,0,1,0,1], [1,0,0,1,0], [0,1,1,0,1]],
	'\'':[[0,1,1,0,0], [0,0,1,0,0], [0,1,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]],
	'(':[[0,0,0,1,0], [0,0,1,0,0], [0,1,0,0,0], [0,1,0,0,0], [0,1,0,0,0], [0,0,1,0,0], [0,0,0,1,0]],
	')':[[0,1,0,0,0], [0,0,1,0,0], [0,0,0,1,0], [0,0,0,1,0], [0,0,0,1,0], [0,0,1,0,0], [0,1,0,0,0]],
	'*':[[0,0,0,0,0], [0,0,1,0,0], [1,0,1,0,1], [0,1,1,1,0], [1,0,1,0,1], [0,0,1,0,0], [0,0,0,0,0]],
	'+':[[0,0,0,0,0], [0,0,1,0,0], [0,0,1,0,0], [1,1,1,1,1], [0,0,1,0,0], [0,0,1,0,0], [0,0,0,0,0]],
	',':[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,1,1,0,0], [0,0,1,0,0], [0,1,0,0,0]],
	'-':[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [1,1,1,1,1], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]],
	'.':[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,1,1,0,0], [0,1,1,0,0]],
	'/':[[0,0,0,0,0], [0,0,0,0,1], [0,0,0,1,0], [0,0,1,0,0], [0,1,0,0,0], [1,0,0,0,0], [0,0,0,0,0]],


	// Column 2
	'0':[[0,1,1,1,0], [1,0,0,0,1], [1,0,0,1,1], [1,0,1,0,1], [1,1,0,0,1], [1,0,0,0,1], [0,1,1,1,0]],
	'1':[[0,0,1,0,0], [0,1,1,0,0], [0,0,1,0,0], [0,0,1,0,0], [0,0,1,0,0], [0,0,1,0,0], [0,1,1,1,0]],
	'2':[[0,1,1,1,0], [1,0,0,0,1], [0,0,0,0,1], [0,0,0,1,0], [0,0,1,0,0], [0,1,0,0,0], [1,1,1,1,1]],
	'3':[[1,1,1,1,1], [0,0,0,1,0], [0,0,1,0,0], [0,0,0,1,0], [0,0,0,0,1], [1,0,0,0,1], [0,1,1,1,0]],
	'4':[[0,0,0,1,0], [0,0,1,1,0], [0,1,0,1,0], [1,0,0,1,0], [1,1,1,1,1], [0,0,0,1,0], [0,0,0,1,0]],
	'5':[[1,1,1,1,1], [1,0,0,0,0], [1,1,1,1,0], [0,0,0,0,1], [0,0,0,0,1], [1,0,0,0,1], [0,1,1,1,0]],
	'6':[[0,0,1,1,0], [0,1,0,0,0], [1,0,0,0,0], [1,1,1,1,0], [1,0,0,0,1], [1,0,0,0,1], [0,1,1,1,0]],
	'7':[[1,1,1,1,1], [1,0,0,0,1], [0,0,0,0,1], [0,0,0,1,0], [0,0,1,0,0], [0,0,1,0,0], [0,0,1,0,0]],
	'8':[[0,1,1,1,0], [1,0,0,0,1], [1,0,0,0,1], [0,1,1,1,0], [1,0,0,0,1], [1,0,0,0,1], [0,1,1,1,0]],
	'9':[[0,1,1,1,0], [1,0,0,0,1], [1,0,0,0,1], [0,1,1,1,1], [0,0,0,0,1], [0,0,0,1,0], [0,1,1,0,0]],
	':':[[0,0,0,0,0], [0,1,1,0,0], [0,1,1,0,0], [0,0,0,0,0], [0,1,1,0,0], [0,1,1,0,0], [0,0,0,0,0]],
	';':[[0,0,0,0,0], [0,1,1,0,0], [0,1,1,0,0], [0,0,0,0,0], [0,1,1,0,0], [0,0,1,0,0], [0,1,0,0,0]],
	'<':[[0,0,0,1,0], [0,0,1,0,0], [0,1,0,0,0], [1,0,0,0,0], [0,1,0,0,0], [0,0,1,0,0], [0,0,0,1,0]],
	'=':[[0,0,0,0,0], [0,0,0,0,0], [1,1,1,1,1], [0,0,0,0,0], [1,1,1,1,1], [0,0,0,0,0], [0,0,0,0,0]],
	'>':[[0,1,0,0,0], [0,0,1,0,0], [0,0,0,1,0], [0,0,0,0,1], [0,0,0,1,0], [0,0,1,0,0], [0,1,0,0,0]],
	'?':[[0,1,1,1,0], [1,0,0,0,1], [0,0,0,0,1], [0,0,0,1,0], [0,0,1,0,0], [0,0,0,0,0], [0,0,1,0,0]],

	// Column 3 TODO
	// Column 4 TODO
	' ':[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]],
	'A':[[0,1,1,1,0], [1,0,0,0,1], [1,0,0,0,1], [1,1,1,1,1], [1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1]],
	'B':[[1,1,1,1,0], [1,1,0,1,1], [1,1,0,1,1], [1,1,1,1,0], [1,1,0,1,1], [1,1,0,1,1], [1,1,1,1,0]],
	'C':[[0,1,1,1,0], [1,1,0,1,1], [1,1,0,0,0], [1,1,0,0,0], [1,1,0,0,0], [1,1,0,1,1], [0,1,1,1,0]],
	'D':[[1,1,1,1,0], [1,1,0,1,1], [1,1,0,1,1], [1,1,0,1,1], [1,1,0,1,1], [1,1,0,1,1], [1,1,1,1,0]],
	'D':[[1,1,1,1,0], [1,1,0,1,1], [1,1,0,1,1], [1,1,0,1,1], [1,1,0,1,1], [1,1,0,1,1], [1,1,1,1,0]],
	'E':[[1,1,1,1,1], [1,1,0,0,0], [1,1,0,0,0], [1,1,1,1,0], [1,1,0,0,0], [1,1,0,0,0], [1,1,1,1,1]],
	'F':[[1,1,1,1,1], [1,1,0,0,0], [1,1,0,0,0], [1,1,1,1,0], [1,1,0,0,0], [1,1,0,0,0], [1,1,0,0,0]],
	'G':[[0,1,1,1,0], [1,1,0,1,1], [1,1,0,0,0], [1,1,0,0,1], [1,1,0,1,1], [1,1,0,0,1], [0,1,1,1,1]],
	'H':[[1,1,0,1,1], [1,1,0,1,1], [1,1,0,1,1], [1,1,1,1,1], [1,1,0,1,1], [1,1,0,1,1], [1,1,0,1,1]],
	'I':[[0,1,1,1,0], [0,0,1,0,0], [0,0,1,0,0], [0,0,1,0,0], [0,0,1,0,0], [0,0,1,0,0], [0,1,1,1,0]],
	'J':[[0,1,1,1,0], [0,0,1,0,0], [0,0,1,0,0], [0,0,1,0,0], [0,0,1,0,0], [1,0,1,0,0], [0,1,0,0,0]],
	'K':[[1,0,0,0,1], [1,0,0,0,1], [1,0,0,1,0], [1,1,1,0,0], [1,0,0,1,0], [1,0,0,0,1], [1,0,0,0,1]],
	'L':[[1,0,0,0,0], [1,0,0,0,0], [1,0,0,0,0], [1,0,0,0,0], [1,0,0,0,0], [1,0,0,0,0], [1,1,1,1,1]],
	'M':[[1,0,0,0,1], [1,1,0,1,1], [1,0,1,0,1], [1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1]],
	'N':[[1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1], [1,1,0,0,1], [1,0,1,0,1], [1,0,0,1,1], [1,0,0,0,1]],
	'O':[[0,1,1,1,0], [1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1], [0,1,1,1,0]],
	'P':[[1,1,1,1,0], [1,0,0,0,1], [1,0,0,0,1], [1,1,1,1,0], [1,0,0,0,0], [1,0,0,0,0], [1,0,0,0,0]],
	'Q':[[0,1,1,1,0], [1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1], [1,0,1,0,1], [1,0,0,1,1], [0,1,1,1,1]],
	'R':[[1,1,1,1,0], [1,0,0,0,1], [1,0,0,0,1], [1,1,1,1,0], [1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1]],
	'S':[[0,1,1,1,1], [1,0,0,0,0], [1,0,0,0,0], [0,1,1,1,0], [0,0,0,0,1], [0,0,0,0,1], [1,1,1,1,0]],
	'T':[[1,1,1,1,1], [0,0,1,0,0], [0,0,1,0,0], [0,0,1,0,0], [0,0,1,0,0], [0,0,1,0,0], [0,0,1,0,0]],
	'U':[[1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1], [0,1,1,1,0]],
	'V':[[1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1], [0,1,0,1,0], [0,0,1,0,0]],
	'W':[[1,0,0,0,1], [1,0,0,0,1], [1,0,1,0,1], [1,0,1,0,1], [1,0,1,0,1], [1,1,0,1,1], [1,0,0,0,1]],
	'X':[[1,0,0,0,1], [1,0,0,0,1], [0,1,0,1,0], [0,0,1,0,0], [0,1,0,1,0], [1,0,0,0,1], [1,0,0,0,1]],
	'Y':[[1,0,0,0,1], [1,0,0,0,1], [0,1,0,1,0], [0,0,1,0,0], [0,0,1,0,0], [0,0,1,0,0], [0,0,1,0,0]],
	'Z':[[1,1,1,1,1], [0,0,0,0,1], [0,0,0,1,0], [0,0,1,0,0], [0,1,0,0,0], [1,0,0,0,0], [1,1,1,1,1]],

	// Column 5
	'`':[[0,1,0,0,0], [0,0,1,0,0], [0,0,0,1,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]],
	'a':[[0,0,0,0,0], [0,0,0,0,0], [0,1,1,1,0], [0,0,0,0,1], [0,1,1,1,1], [1,0,0,0,1], [0,1,1,1,1]],
	'b':[[1,0,0,0,0], [1,0,0,0,0], [1,0,1,1,0], [1,1,0,0,1], [1,0,0,0,1], [1,0,0,0,1], [1,1,1,1,0]],
	'c':[[0,0,0,0,0], [0,0,0,0,0], [0,1,1,1,0], [1,0,0,0,0], [1,0,0,0,0], [1,0,0,0,1], [0,1,1,1,0]],
	'd':[[0,0,0,0,1], [0,0,0,0,1], [0,1,1,0,1], [1,0,0,1,1], [1,0,0,0,1], [1,0,0,0,1], [0,1,1,1,1]],
	'e':[[0,0,0,0,0], [0,0,0,0,0], [0,1,1,1,0], [1,0,0,0,1], [1,1,1,1,1], [1,0,0,0,0], [0,1,1,1,0]],
	'f':[[0,0,1,1,0], [0,1,0,0,1], [0,1,0,0,0], [1,1,1,0,0], [0,1,0,0,0], [0,1,0,0,0], [0,1,0,0,0]],
	'g':[[0,0,0,0,0], [0,1,1,1,1], [1,0,0,0,1], [1,0,0,0,1], [0,1,1,1,1], [0,0,0,0,1], [0,1,1,1,0]],
	'h':[[1,0,0,0,0], [1,0,0,0,0], [1,0,1,1,0], [1,1,0,0,1], [1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1]],
	'i':[[0,0,1,0,0], [0,0,0,0,0], [0,1,1,0,0], [0,0,1,0,0], [0,0,1,0,0], [0,0,1,0,0], [0,1,1,1,0]],
	'j':[[0,0,0,1,0], [0,0,0,0,0], [0,0,1,1,0], [0,0,0,1,0], [0,0,0,1,0], [1,0,0,1,0], [0,1,1,0,0]],
	'k':[[1,0,0,0,0], [1,0,0,0,0], [1,0,0,1,0], [1,0,1,0,0], [1,1,0,0,0], [1,0,1,0,0], [1,0,0,1,0]],
	'l':[[0,1,1,0,0], [0,0,1,0,0], [0,0,1,0,0], [0,0,1,0,0], [0,0,1,0,0], [0,0,1,0,0], [0,1,1,1,0]],
	'm':[[0,0,0,0,0], [0,0,0,0,0], [1,1,0,1,0], [1,0,1,0,1], [1,0,1,0,1], [1,0,0,0,1], [1,0,0,0,1]],
	'n':[[0,0,0,0,0], [0,0,0,0,0], [1,0,1,1,0], [1,1,0,0,1], [1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1]],
	'o':[[0,0,0,0,0], [0,0,0,0,0], [0,1,1,1,0], [1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1], [0,1,1,1,0]],

	// Column 6
	'p':[[0,0,0,0,0], [0,0,0,0,0], [1,1,1,1,0], [1,0,0,0,1], [1,1,1,1,0], [1,0,0,0,0], [1,0,0,0,0]],
	'q':[[0,0,0,0,0], [0,0,0,0,0], [0,1,1,0,1], [1,0,0,1,1], [0,1,1,1,1], [0,0,0,0,1], [0,0,0,0,1]],
	'r':[[0,0,0,0,0], [0,0,0,0,0], [1,0,1,1,0], [1,1,0,0,1], [1,0,0,0,0], [1,0,0,0,0], [1,0,0,0,0]],
	's':[[0,0,0,0,0], [0,0,0,0,0], [0,1,1,1,0], [1,0,0,0,0], [0,1,1,1,0], [0,0,0,0,1], [1,1,1,1,0]],
	't':[[0,1,0,0,0], [0,1,0,0,0], [1,1,1,0,0], [0,1,0,0,0], [0,1,0,0,0], [0,1,0,0,1], [0,0,1,1,0]],
	'u':[[0,0,0,0,0], [0,0,0,0,0], [1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1], [1,0,0,1,1], [0,1,1,0,1]],
	'v':[[0,0,0,0,0], [0,0,0,0,0], [1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1], [0,1,0,1,0], [0,0,1,0,0]],
	'w':[[0,0,0,0,0], [0,0,0,0,0], [1,0,0,0,1], [1,0,1,0,1], [1,0,1,0,1], [1,0,1,0,1], [0,1,0,1,0]],
	'x':[[0,0,0,0,0], [0,0,0,0,0], [1,0,0,0,1], [0,1,0,1,0], [0,0,1,0,0], [0,1,0,1,0], [1,0,0,0,1]],
	'y':[[0,0,0,0,0], [0,0,0,0,0], [1,0,0,0,1], [1,0,0,0,1], [0,1,1,1,1], [0,0,0,0,1], [0,1,1,1,0]],
	'z':[[0,0,0,0,0], [0,0,0,0,0], [1,1,1,1,1], [0,0,0,1,0], [0,0,1,0,0], [0,1,0,0,0], [1,1,1,1,1]],
	'{':[[0,0,0,1,0], [0,0,1,0,0], [0,0,1,0,0], [0,1,0,0,0], [0,0,1,0,0], [0,0,1,0,0], [0,0,0,1,0]],
	'|':[[0,0,1,0,0], [0,0,1,0,0], [0,0,1,0,0], [0,0,1,0,0], [0,0,1,0,0], [0,0,1,0,0], [0,0,1,0,0]],
	'}':[[0,1,0,0,0], [0,0,1,0,0], [0,0,1,0,0], [0,0,0,1,0], [0,0,1,0,0], [0,0,1,0,0], [0,1,0,0,0]],
	// TODO 2 ARROWS



	// RAM CUSTOM CHARACTERS
	'\u2600':[[1,0,0,0,0], [1,0,0,0,0], [1,0,0,0,0], [1,0,0,0,0], [1,0,0,0,0], [1,0,0,0,0], [1,0,0,0,0]],
	'\u2601':[[1,1,0,0,0], [1,1,0,0,0], [1,1,0,0,0], [1,1,0,0,0], [1,1,0,0,0], [1,1,0,0,0], [1,1,0,0,0]],
	'\u2602':[[1,1,1,0,0], [1,1,1,0,0], [1,1,1,0,0], [1,1,1,0,0], [1,1,1,0,0], [1,1,1,0,0], [1,1,1,0,0]],
	'\u2603':[[1,1,1,1,0], [1,1,1,1,0], [1,1,1,1,0], [1,1,1,1,0], [1,1,1,1,0], [1,1,1,1,0], [1,1,1,1,0]],
	'\u2604':[[1,1,1,1,1], [1,1,1,1,1], [1,1,1,1,1], [1,1,1,1,1], [1,1,1,1,1], [1,1,1,1,1], [1,1,1,1,1]],

}

UNKNOWN_CHAR = [[1,0,0,0,1], [0,1,1,1,0], [0,1,1,1,0], [1,1,1,0,1], [1,1,0,1,1], [1,1,1,1,1], [1,1,0,1,1]];





var socket;

$(document).ready(onDocumentReady);

function onDocumentReady(){
	createCharTables();
	populateCharDisplaysWithPixels();

	$(document).keydown(onKeyDown);
	$(document).keyup(onKeyUp);

	socket = new WebSocket("ws://localhost:8000/");
	socket.addEventListener('message', onMessage);

	resetDisplay();
	onMessage("THE KILLERS\nWHEN YOU WERE YOUNG");
}

function getKey(e){
	switch(e.which){
		case 13:
			// Enter
			return 0;
		case 37:
			// Left
			return 4;
		case 38:
			// Up
			return 3;
		case 39:
			// Right
			return 1
		case 40:
			// Down
			return 2;
		default:
			return -1;
	}
}

function onKeyDown(e){
	var key = getKey(e);
	if (key >= 0){
		var message = {jsonrpc: "2.0", method: "keydown", params: key}
		socket.send(JSON.stringify(message))
	}
}

function onKeyUp(e){
	var key = getKey(e);
	if (key >= 0){
		var message = {jsonrpc: "2.0", method: "keyup", params: key}
		socket.send(JSON.stringify(message))
	}
}

function onMessage(event){
	console.log(message)
	var message = JSON.parse(event.data);
	console.log(message);
	switch(message.method){
		case 'message':
			updateDisplay(message.params);
			break;
	}

	
}

function updateDisplay(message){
	
	resetDisplay();
	var splitted = message.split(/\r|\n/);
	for (var row=0; row<splitted.length; row++){
		var col = 0;
		while(col < splitted[row].length && col < NUMBER_OF_CHARS_IN_ROW){
			setChar(row, col, splitted[row].charAt(col));
			col++;
		}
	}
}

function resetDisplay(){
	$('.pixel').removeClass('active');
}

function setChar(row, col, char){
	console.log(char)
	var charDisplay = $('.char-display.row-' + row + '.col-' + col);
	for (i=0; i<NUMBER_PIXELS_IN_COL; i++){
		for (z=0; z<NUMBER_PIXELS_IN_ROW; z++){
			if (getCharValues(char)[i][z] || getCharValues(char)[i][z] == 1){
				charDisplay.find('.pixel.pixel-row-' + i + '.pixel-col-' + z).addClass('active');
			}
		}
	}

	
}

function getCharValues(char){
	if (CHARS[char] != undefined){
		return CHARS[char];
	}else{
		return UNKNOWN_CHAR;
	}
}

function createCharTables(){
	var container = $('#lcd_container');
	var j = 0;
	var l = 0;
	for(j=0; j<NUMBER_OF_CHAR_ROWS; j++){
		var row = $('<tr></tr>');
		for (l=0; l<NUMBER_OF_CHARS_IN_ROW; l++){
			var cell = $('<td class="char-display row-' + j + ' col-' + l + '"></td>');
			row.append(cell);
		}
		container.append(row);
	}
}

function populateCharDisplaysWithPixels(){
	$('.char-display').each(function(){
		$(this).append(getCharDisplayDiv());
	});
}

function getCharDisplayDiv(){
	var string = "<table>";
	for (i=0; i<NUMBER_PIXELS_IN_COL; i++){
		string += "<tr>";
		for (z=0; z<NUMBER_PIXELS_IN_ROW; z++){
			string += '<td class="pixel pixel-row-' + i + ' pixel-col-' + z + '"></td>';
		}
		string += '</tr>';
	}
	string += '</table>';
	return string;
}
